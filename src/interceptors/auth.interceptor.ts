import { Injectable } from '@angular/core';
import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { App } from 'ionic-angular';

import 'rxjs/add/operator/catch';
import 'rxjs/add/observable/throw';

import { Observable } from 'rxjs/Observable';

import { IntroPage } from '@pages/auth/intro/intro';

import { AuthService } from '@services/auth.service';

@Injectable()
export class AuthHeaderInterceptor implements HttpInterceptor {

  static readonly AUTHORIZATION_HEADER = 'Authorization';

  constructor(private app: App) {
  }

  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {

    let headers = request.headers.set(AuthHeaderInterceptor.AUTHORIZATION_HEADER, `JWT ${AuthService.getToken()}`);
    const clonedRequest = request.clone({
      headers: headers
    });

    const navCtrl = this.app.getActiveNavs()[0];

    return next.handle(clonedRequest).catch((res) => {
      if (res.status === 400 || res.status === 403 || res.status === 409 || res.status === 500) {
        // Solve problems generated by these error codes
      } else if (res.status === 401) {
        console.log('Unauthorized ', res);
        if (res.error && res.error.message) {
          console.log('Error: ' + res.error.message);
        } else {
          navCtrl.setRoot(IntroPage, null, {animate: true, direction: 'forward'});
        }
      } else if (res.status === 404) {
        // Solve problems generated by the 404 error code (TODO: Add ErrorPage)
      } else {
        return Observable.throw(res);
      }
    });
  }
}
